#! /bin/bash
PATH="$HOME/bin:$HOME/.local/bin:/usr/local/bin:/usr/bin:$PATH"


INTERNAL_MONITOR="eDP-1"
EXTERNAL_MONITOR="HDMI-1"

if [[ "$1" = 0 ]]; then
    # Default keyboard layout
    if [ -s "$XKB_LAYOUTS_FILE" ]; then
        setxkbmap "$(head -1 $XKB_LAYOUTS_FILE)"
    fi

    if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
        bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5
        bspc monitor "$EXTERNAL_MONITOR" -d 6 7 8 9 10
    else
        bspc monitor "$INTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9 10
    fi
fi

if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
    xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --rotate normal \
        --output "$EXTERNAL_MONITOR" --mode 1920x1080 --rotate normal --left-of "$INTERNAL_MONITOR"

    # If $EXTERNAL_MONITOR has just been connected, move its desktops there
    if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 5 ]]; then
        for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | tail -5); do
            bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
        done

        bspc desktop Desktop --remove
    fi

    bspc wm -O "$INTERNAL_MONITOR" "$EXTERNAL_MONITOR"
else
    xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --rotate normal \
        --output "$EXTERNAL_MONITOR" --off

    # If $INTERNAL_MONITOR doesn't have all desktops already, move misssing ones
    if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 10 ]]; then
        bspc monitor "$EXTERNAL_MONITOR" -a Desktop

        for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
            bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
        done

        bspc monitor "$EXTERNAL_MONITOR" --remove
        bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8 9 10
    fi
fi


# sxhkd
pgrep -x sxhkd > /dev/null || sxhkd &
pgrep -x picom > /dev/null || picom --config $XDG_CONFIG_HOME/picom/picom.conf &>> $XDG_CONFIG_HOME/picom/.picom.err &
pgrep -x dunst > /dev/null || dunst &
pgrep -x greenclip || greenclip daemon &
pgrep -x lxpolkit || lxpolkit &
pgrep -f "pcmanfm-qt --daemon-mode" || pcmanfm-qt --daemon-mode &

bspc config window_gap			12
bspc config border_width		4
bspc config focused_border_color "#c8c093"
bspc config split_ratio                   0.52
bspc config borderless_monocle            true

# Some apps should open on a specific desktop
bspc rule -a LibreWolf desktop=^2 private=on focus=on
bspc rule -a obsidian desktop=^3 private=on focus=on
bspc rule -a discord desktop=^7 private=on
bspc rule -a Spotify desktop=^10 private=on

# Floating stuff
bspc rule -a Blueman-manager state=floating
bspc rule -a Nm-connection-editor state=floating
bspc rule -a pcmanfm-qt state=floating
bspc rule -a zoom state=floating
bspc rule -a Nvidia-settings state=floating

# disable ugly cursor cross
xsetroot -cursor_name left_ptr


# polybar
killall -q polybar
while pgrep -x polybar > /dev/null; do sleep 1; done

polybar -r main &>> $HOME/.config/polybar/.polybar.err &

if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
    polybar -r secondary &>> $HOME/.config/polybar/.polybar.err &
fi


# nitrogen
nitrogen --restore &


if [ "$1" = 0 ]; then
    # Screen lock
    xset s 300 5
    xss-lock -n /usr/lib/xsecurelock/dimmer -l -- xsecurelock &

    # Startup programs
    dex --autostart &
fi

